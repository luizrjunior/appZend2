<?php

namespace Rifas\Entity\Repository;

use Rifas\Entity\PremiadoEntity;
use Doctrine\ORM\EntityRepository;
use Zend\Stdlib\Hydrator;

/**
 * PremiadoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PremiadoRepository extends EntityRepository {

    public function inserirPremiado($param = array()) {
        $entity = new PremiadoEntity($param);

        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();

        return $entity;
    }

    public function editarPremiado($param = array()) {
        $entity = $this->getEntityManager()->getReference('Premiado\Entity\PremiadoEntity', $param['idPremiado']);
        (new Hydrator\ClassMethods())->hydrate($param, $entity);

        $this->getEntityManager()->persist($entity);
        $this->getEntityManager()->flush();

        return $entity;
    }

    public function selecionarPremiado($id) {
        $repository = $this->find($id);
        return $repository;
    }

    public function selecionarPremiadoBy($param) {
        $repository = $this->findBy($param);
        return $repository;
    }

    public function listarPremiado($param = array()) {
        $queryCreate = $this->criarConsultaPremiado($param);
        $listaPremiado = $queryCreate->getQuery()->getResult();
        return $listaPremiado;
    }

    private function criarConsultaPremiado($param = array()) {
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select(array('a.idPremiado', 'a.nuPremio', 'a.nuRifa', 'a.dtSorteio', 'b.idRifa'))
                ->from('Rifas\Entity\PremiadoEntity', 'a')
                ->innerJoin('a.idRifa', 'b');
        if ($param['idRifaPsq'] != "") {
            $query->andWhere("b.idRifa = :idRifaPsq")
                    ->setParameter('idRifaPsq', $param['idRifaPsq']);
        }
        if ($param['nuRifaPsq'] != "") {
            $query->andWhere("a.nuRifa = :nuRifaPsq")
                    ->setParameter('nuRifaPsq', $param['nuRifaPsq']);
        }
        $query->addOrderBy('a.idPremiado', 'ASC');

        return $query;
    }

    public function excluirPremiado($repository) {
        $this->getEntityManager()->remove($repository);
        $this->getEntityManager()->flush();
        return $repository;
    }

}
